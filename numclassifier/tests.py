# -*- coding: utf-8 -*-

"""
    MNIST Classification with TensorFlow on Django
    Copyright (C) 2017  Angel Caban

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""

from __future__ import unicode_literals

import numpy as np
from django.test import TestCase
from .models import *
from .num_cnn import predict, run_learn



class PredictionTestCase(TestCase):
    test_img = np.array(
        [[[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[84],[185],[159],[151],[60],[36],[0],
           [0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[222],[254],[254],[254],[254],[241],
           [198],[198],[198],[198],[198],[198],[198],[198],[170],[52],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[67],[114],[72],[114],[163],[227],
           [254],[225],[254],[254],[254],[250],[229],[254],[254],[140],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[17],[66],[14],
           [67],[67],[67],[59],[21],[236],[254],[106],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [0],[0],[0],[83],[253],[209],[18],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [0],[0],[22],[233],[255],[83],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [0],[0],[129],[254],[238],[44],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [0],[59],[249],[254],[62],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [0],[133],[254],[187],[5],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [9],[205],[248],[58],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [126],[254],[182],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[75],
           [251],[240],[57],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[19],[221],
           [254],[166],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[3],[203],[254],
           [219],[35],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[38],[254],[254],
           [77],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[31],[224],[254],[115],
           [1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[133],[254],[254],[52],
           [0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[61],[242],[254],[254],
           [52],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[121],[254],[254],[219],
           [40],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[121],[254],[207],[18],
           [0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
          [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],
           [0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]]]],
        dtype='uint8')


    def setUp(self):
        ''' Do Some Setup '''
        

    def test_run_prediction(self):
        ''' Test num_cnn.predict fn '''
        prediction = predict(PredictionTestCase.test_img)
        self.assertEqual(np.argmax(prediction['probabilities']), 7)


class LearningTestCase(TestCase):
    test_img = np.array(
        [ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,84,185,159,151,60,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,222,254,254,254,254,241,198,198,198,198,198,198,198,198,170,52,0,0,0,0,0,0,
          0,0,0,0,0,0,67,114,72,114,163,227,254,225,254,254,254,250,229,254,254,140,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,17,66,14,67,67,67,59,21,236,254,106,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,253,209,18,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,233,255,83,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,254,238,44,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,249,254,62,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,133,254,187,5,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,205,248,58,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126,254,182,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,251,240,57,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,19,221,254,166,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,3,203,254,219,35,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,38,254,254,77,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,31,224,254,115,1,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,133,254,254,52,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,61,242,254,254,52,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,121,254,254,219,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,121,254,207,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
      dtype='uint8')


    def setUp(self):
        ''' Do Some Setup '''
        

    def test_run_learn(self):
        ''' Test num_cnn.run_learn '''
        run_learn(pixels=LearningTestCase.test_img,
                  label=np.array([7], dtype=np.int32))


